version: "3.7"

volumes:
  brownie: {}
  cache: {}
  memray: {}
  ypricemagic: {}

networks:
  yearn-exporter-infra_stack:
    external: true

x-envs: &envs
  - CONCURRENCY=${CONCURRENCY:-1}
  - SKIP_WALLET_STATS
  - SENTRY_ENVIRONMENT=${SENTRY_ENVIRONMENT:-development}
  - SENTRY_RELEASE
  - SENTRY_DSN
  - SENTRY_TRACES_SAMPLE_RATE
  # Basic log level configuration
  - LOG_LEVEL=${LOG_LEVEL:-INFO}
  # Granular log level configuration
  # pass a comma separated list of `logger.name:LEVEL` (ie: yearn.v1.vaults:DEBUG,yearn.v2.vaults:DEBUG)
  - LOGGER_LEVELS
  - DEBUG
  - SKIP_DEEP_UNISWAPS
  - SHOW_STATS
  - TX_POOL_SIZE
  - RESOLUTION
  - REORG_BUFFER
  - JSONRPC_BATCH_MAX_SIZE
  - AIOHTTP_TIMEOUT=${AIOHTTP_TIMEOUT:-1800}
  - PROFILE_MEMORY
  # asyncio (optional, debugging)
  - PYTHONASYNCIODEBUG
  # dank-mids (mandatory)
  # NOTE: We do this to limit memory consumption, on a big server you can increase for faster performance.
  - DANK_MIDS_BROWNIE_CALL_SEMAPHORE=${DANK_MIDS_BROWNIE_CALL_SEMAPHORE:-250_000}
  # NOTE: This is included as an escape-hatch-of-last-resort and should not actually occur
  - DANKMIDS_STUCK_CALL_TIMEOUT
  # dank-mids (optional)
  - MAX_JSONRPC_BATCH_SIZE
  - DANKMIDS_BROWNIE_ENCODER_SEMAPHORE
  - DANKMIDS_DEMO_MODE
  - DANKMIDS_ETH_GETTRANSACTION_SEMAPHORE=${DANKMIDS_ETH_GETTRANSACTION_SEMAPHORE:-100}
  # eth-retry (optional)
  - ETH_RETRY_DEBUG
  - ETH_RETRY_DISABLED
  - MAX_RETRIES=${MAX_RETRIES:-5}
  - MIN_SLEEP_TIME
  - MAX_SLEEP_TIME
  # multicall (optional)
  - MULTICALL_CALL_SEMAPHORE=${MULTICALL_CALL_SEMAPHORE:-250_000}
  # ypriceapi (optional)
  - YPRICEAPI_URL
  - YPRICEAPI_SIGNER
  - YPRICEAPI_SIGNATURE
  - YPRICEAPI_TIMEOUT
  - YPRICEAPI_SEMAPHORE
  - SKIP_YPRICEAPI
  # ypricemagic (optional)
  - DOP
  - YPM_DEEPEST_ROUTER_SEMAPHORE=5
  - YPRICEMAGIC_RECURSION_LOGGER_LEVEL
  - YPRICEMAGIC_RECURSION_TIMEOUT=${YPRICEMAGIC_RECURSION_TIMEOUT:-1800}  # 0.5 hours
  - YPRICEMAGIC_CACHE_TTL=${YPRICEMAGIC_CACHE_TTL:-600} # 10 minutes
  # This is a temporary hack that can be removed once deps support eth_hash==0.5.0. Creds to bunny for finding this.
  - ETH_HASH_BACKEND=${ETH_HASH_BACKEND:-pysha3}

  # APY ENVS
  - AWS_ACCESS_KEY
  - AWS_ACCESS_SECRET
  - AWS_BUCKET
  - TG_YFIREBOT_GROUP_INTERNAL
  - TG_YFIREBOT_GROUP_EXTERNAL
  - TG_YFIREBOT
  - EXPORT_MODE
  - DEBUG_ADDRESS

  # REVENUES ENVS
  - REVENUES_AWS_KEY_ID
  - REVENUES_AWS_SECRET_ACCESS_KEY
  - REVENUES_S3_BUCKET
  - REVENUES_S3_PATH
  - REVENUES_FROM
  - REVENUES_TO

  # NETWORK ENVS
  - NETWORK
  - BROWNIE_NETWORK
  - WEB3_PROVIDER
  - MAINNET_PROVIDER
  - EXPLORER
  - DEFAULT_EXPLORER
  - ETHERSCAN_TOKEN
  - XDAISCAN_TOKEN
  - FTMSCAN_TOKEN
  - ARBISCAN_TOKEN
  - OPTISCAN_TOKEN

  # POSTGRES ENVS
  - PGHOST=postgres
  - PGPORT=5432
  - PGDATABASE=postgres
  - PGUSER=postgres
  - PGPASSWORD=yearn-exporter

  # DOCKER CONTAINER ENVS
  - CONTAINER_NAME

x-volumes: &volumes
  - brownie:/root/.brownie
  - cache:/app/yearn-exporter/cache
  - memray:/app/yearn-exporter/memray
  - ypricemagic:/root/.ypricemagic

services:
  exporter:
    image: ghcr.io/yearn/yearn-exporter
    volumes: *volumes
    environment: *envs
    networks:
      - yearn-exporter-infra_stack
    external_links:
      - yearn-exporter-infra-postgres-1:postgres
      - yearn-exporter-infra-victoria-metrics-1:victoria-metrics
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: 3
        env: "NETWORK,CONTAINER_NAME,SENTRY_ENVIRONMENT,SENTRY_RELEASE"

    restart: on-failure
