version: '3.7'

volumes:
  grafana_data: {}
  brownie: {}
  cache: {}
  victoria_metrics_data: {}
  postgres_data: {}

networks:
  yearn-exporter:

x-common-envs: &common-envs
  - WEB3_PROVIDER:
  - EXPLORER:
  - SLEEP_SECONDS:
  - SKIP_WALLET_STATS:
  - SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT:-development}
  - SENTRY_RELEASE:
  - SENTRY_DSN:
  - LOG_LEVEL:
  - POOL_SIZE:
  - TX_POOL_SIZE:
  - RESOLUTION:
  - REORG_BUFFER:
  # eth-retry (optional)
  - MAX_RETRIES:
  - MIN_SLEEP_TIME:
  - MAX_SLEEP_TIME:
  # This is a temporary hack that can be removed once deps support eth_hash==0.5.0. Creds to bunny for finding this.
  - ETH_HASH_BACKEND: ${ETH_HASH_BACKEND:-pysha3}

x-common-postgres-envs: &common-postgres-envs
  - PGHOST: postgres
  - PGDATABASE: postgres
  - PGUSER: postgres
  - PGPASSWORD: yearn-exporter

x-common-eth-envs: &common-eth-envs
  - NETWORK: mainnet
  - ETHERSCAN_TOKEN:

x-common-gnosis-envs: &common-gnosis-envs
  - NETWORK: xdai-main
  - WEB3_PROVIDER: $XDAI_WEB3_PROVIDER
  - EXPLORER: $XDAI_EXPLORER
  - XDAISCAN_TOKEN:

x-common-ftm-envs: &common-ftm-envs
  - NETWORK: ftm-main
  - WEB3_PROVIDER: $FTM_WEB3_PROVIDER
  - EXPLORER: $FTM_EXPLORER
  - FTMSCAN_TOKEN:

x-common-arbi-envs: &common-arbi-envs
  - NETWORK: arbitrum-main
  - WEB3_PROVIDER: $ARBI_WEB3_PROVIDER
  - EXPLORER: $ARBI_EXPLORER
  - ARBISCAN_TOKEN:

x-common-opti-envs: &common-opti-envs
  - NETWORK: optimism-main
  - WEB3_PROVIDER: $OPTI_WEB3_PROVIDER
  - EXPLORER: $OPTI_EXPLORER
  - OPTISCAN_TOKEN:

x-common-volumes: &common-volumes
  - brownie:/root/.brownie
  - cache:/app/yearn-exporter/cache

services:
  eth-exporter:
    build: .
    image: yearn-exporter
    command: exporters/vaults
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-eth-envs
    networks:
      - yearn-exporter
    restart: on-failure

  ftm-exporter:
    image: yearn-exporter
    command: exporters/vaults
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-ftm-envs
    networks:
      - yearn-exporter
    restart: on-failure

  gnosis-exporter:
    image: yearn-exporter
    command: exporters/vaults
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-gnosis-envs
    networks:
      - yearn-exporter
    restart: on-failure

  arbi-exporter:
    image: yearn-exporter
    command: exporters/vaults
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-arbi-envs
    networks:
      - yearn-exporter
    restart: on-failure

  opti-exporter:
    image: yearn-exporter
    command: exporters/vaults
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-opti-envs
    networks:
      - yearn-exporter
    restart: on-failure


  treasury-exporter:
    image: yearn-exporter
    command: exporters/treasury
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-eth-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - victoria-metrics
      - postgres

  ftm-treasury-exporter:
    image: yearn-exporter
    command: exporters/treasury
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-ftm-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - victoria-metrics
      - postgres

  gnosis-treasury-exporter:
    image: yearn-exporter
    command: exporters/treasury
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-gnosis-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - victoria-metrics
      - postgres

  arbi-treasury-exporter:
    image: yearn-exporter
    command: exporters/treasury
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-arbi-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - victoria-metrics
      - postgres

  opti-treasury-exporter:
    image: yearn-exporter
    command: exporters/treasury
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-opti-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - victoria-metrics
      - postgres


  treasury-transactions-exporter:
    image: yearn-exporter
    command: exporters/treasury_transactions
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-eth-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - postgres

  ftm-treasury-transactions-exporter:
    image: yearn-exporter
    command: exporters/treasury_transactions
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-ftm-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - postgres
  
  gnosis-treasury-transactions-exporter:
    image: yearn-exporter
    command: exporters/treasury_transactions
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-gnosis-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - postgres
    
  arbi-treasury-transactions-exporter:
    image: yearn-exporter
    command: exporters/treasury_transactions
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-arbi-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - postgres
  
  opti-treasury-transactions-exporter:
    image: yearn-exporter
    command: exporters/treasury_transactions
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-opti-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - postgres


  sms-exporter:
    image: yearn-exporter
    command: exporters/sms
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-eth-envs
    networks:
      - yearn-exporter
    restart: on-failure

  ftm-sms-exporter:
    image: yearn-exporter
    command: exporters/sms
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-ftm-envs
    networks:
      - yearn-exporter
    restart: on-failure

  gnosis-sms-exporter:
    image: yearn-exporter
    command: exporters/sms
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-gnosis-envs
    networks:
      - yearn-exporter
    restart: on-failure

  arbi-sms-exporter:
    image: yearn-exporter
    command: exporters/sms
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-arbi-envs
    networks:
      - yearn-exporter
    restart: on-failure

  opti-sms-exporter:
    image: yearn-exporter
    command: exporters/sms
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-opti-envs
    networks:
      - yearn-exporter
    restart: on-failure


  transactions-exporter:
    image: yearn-exporter
    command: exporters/transactions
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-eth-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - postgres

  ftm-transactions-exporter:
    image: yearn-exporter
    command: exporters/transactions
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-ftm-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - postgres

  gnosis-transactions-exporter:
    image: yearn-exporter
    command: exporters/transactions
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-gnosis-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - postgres

  arbi-transactions-exporter:
    image: yearn-exporter
    command: exporters/transactions
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-arbi-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - postgres

  opti-transactions-exporter:
    image: yearn-exporter
    command: exporters/transactions
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-opti-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - postgres

  wallet-exporter:
    image: yearn-exporter
    command: exporters/wallets
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-eth-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: always
    depends_on:
      - victoria-metrics
      - postgres

  ftm-wallet-exporter:
    image: yearn-exporter
    command: exporters/wallets
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-ftm-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: always
    depends_on:
      - victoria-metrics
      - postgres

  gnosis-wallet-exporter:
    image: yearn-exporter
    command: exporters/wallets
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-gnosis-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: always
    depends_on:
      - victoria-metrics
      - postgres

  arbi-wallet-exporter:
    image: yearn-exporter
    command: exporters/wallets
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-arbi-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: always
    depends_on:
      - victoria-metrics
      - postgres

  opti-wallet-exporter:
    image: yearn-exporter
    command: exporters/wallets
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-opti-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: always
    depends_on:
      - victoria-metrics
      - postgres

  partners-exporter:
    image: yearn-exporter
    command: exporters/partners
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-eth-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - victoria-metrics
      - postgres

  ftm-partners-exporter:
    image: yearn-exporter
    command: exporters/partners
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-ftm-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - victoria-metrics
      - postgres
  
  gnosis-partners-exporter:
    image: yearn-exporter
    command: exporters/partners
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-gnosis-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - victoria-metrics
      - postgres
  
  arbi-partners-exporter:
    image: yearn-exporter
    command: exporters/partners
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-arbi-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - victoria-metrics
      - postgres
  
  opti-partners-exporter:
    image: yearn-exporter
    command: exporters/partners
    volumes: *common-volumes
    environment:
      <<: *common-envs
      <<: *common-opti-envs
      <<: *common-postgres-envs
    networks:
      - yearn-exporter
    restart: on-failure
    depends_on:
      - victoria-metrics
      - postgres

  vmagent:
    image: victoriametrics/vmagent:heads-public-single-node-0-g52eb9c99e
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '-promscrape.config=/etc/prometheus/prometheus.yml'
      - '-remoteWrite.url=http://victoria-metrics:8428/api/v1/write'
    links:
      - victoria-metrics:victoria-metrics
    depends_on:
      - eth-exporter
      - victoria-metrics
    networks:
      - yearn-exporter
    restart: always

  victoria-metrics:
    image: victoriametrics/victoria-metrics
    volumes:
      - victoria_metrics_data:/victoria-metrics-data
    command:
      - '-retentionPeriod=10y'
    ports:
      - 127.0.0.1:8428:8428
    networks:
      - yearn-exporter
    restart: always

  grafana:
    image: grafana/grafana:8.3.1
    depends_on:
      - victoria-metrics
      - postgres
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/yearn/Overview.json
      - GF_SERVER_ROOT_URL=https://yearn.vision
      - GF_RENDERING_SERVER_URL=http://renderer:8091/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - yearn-exporter
    restart: always

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - 127.0.0.1:8091:8091
    environment:
      - ENABLE_METRICS=true
      - HTTP_PORT=8091
    networks:
      - yearn-exporter
    restart: always

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    ports:
      - 127.0.0.1:9100:9100
    command:
      - '--path.rootfs=/host'
    networks:
      - yearn-exporter
    volumes:
      - '/:/host:ro,rslave'
    restart: always

  postgres:
    image: postgres
    ports:
      - 127.0.0.1:5432:5432
    environment:
      - POSTGRES_USER=${PGUSER:-postgres}
      - POSTGRES_PASSWORD=${PGPASSWORD:-yearn-exporter}
      - POSTGRES_DB=${PGDATABASE:-postgres}
    networks:
      - yearn-exporter
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
